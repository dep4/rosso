package main

import (
   "fmt"
   "github.com/89z/format/crypto"
   "github.com/dreadl0ck/ja3"
   "github.com/dreadl0ck/tlsx"
)

// Android API 30
var payload = []byte("\x16\x03\x01\x02\x00\x01\x00\x01\xfc\x03\x03;\xa4\x8fb%-\xef\xb3\xd7\xe8b\xa1\xfc\x1f\x12$\xec\x8f\x19\t\xb4\xdb\xe3j#\x16\x03\xc741\xe6\x96 \xbf\xe5\v\xb1\xa3\xdcۃ\xc1L˥\xe6\xb4ь\xf4K\xb6\xf0\xc8r\x93\xc8\n\x1f\x1a]Q\xdf6a\x00 \n\n\x13\x01\x13\x02\x13\x03\xc0+\xc0/\xc0,\xc00̨̩\xc0\x13\xc0\x14\x00\x9c\x00\x9d\x00/\x005\x01\x00\x01\x93\xfa\xfa\x00\x00\x00\x00\x00\x10\x00\x0e\x00\x00\vexample.com\x00\x17\x00\x00\xff\x01\x00\x01\x00\x00\n\x00\n\x00\b\xea\xea\x00\x1d\x00\x17\x00\x18\x00\v\x00\x02\x01\x00\x00#\x00\x00\x00\x10\x00\x0e\x00\f\x02h2\bhttp/1.1\x00\x05\x00\x05\x01\x00\x00\x00\x00\x00\r\x00\x12\x00\x10\x04\x03\b\x04\x04\x01\x05\x03\b\x05\x05\x01\b\x06\x06\x01\x00\x12\x00\x00\x003\x00+\x00)\xea\xea\x00\x01\x00\x00\x1d\x00 y\xbd\x06a\xee\x99W\x8b\x03\xb6?\xac\xa9\xb9DhC\xaa\xd0ޓ\xa4ȼ<Ѷ\xfdQ\xaa7J\x00-\x00\x02\x01\x01\x00+\x00\v\n\xfa\xfa\x03\x04\x03\x03\x03\x02\x03\x01\x00\x1b\x00\x03\x02\x00\x02\x1a\x1a\x00\x01\x00\x00\x15\x00\xd1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")

func main() {
   {
      var hello tlsx.ClientHelloBasic
      err := hello.Unmarshal(payload)
      if err != nil {
         panic(err)
      }
      fmt.Println(hello)
      fmt.Printf("%s\n", ja3.Bare(&hello))
   }
   {
      hello, err := crypto.ParseTLS(payload)
      if err != nil {
         panic(err)
      }
      ja3, err := crypto.FormatJA3(hello)
      if err != nil {
         panic(err)
      }
      fmt.Println(ja3)
   }
}
